---
import { ClientRouter } from 'astro:transitions';

import Header from '@/components/Header.astro';

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{title} - Dashboard</title>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
        <ClientRouter />
        <script is:inline>
            // Forzar modo oscuro siempre
            document.documentElement.classList.add('dark');
            localStorage.setItem('theme', 'dark');
        </script>
    </head>

    <body class="bg-primary-50/30 dark:bg-primary-900 transition-colors duration-200">
        <Header />

        <div class="pt-16 min-h-screen">
            <main class="bg-primary-50/30 dark:bg-primary-900/80">
                <div class="container mx-auto py-8 px-4">
                    <slot />
                </div>
            </main>
        </div>

        <!-- Script para el menú móvil -->
        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const mobileMenuButton = document.getElementById('mobile-menu-button');
                const mobileMenu = document.getElementById('mobile-menu');

                if (mobileMenuButton && mobileMenu) {
                    mobileMenuButton.addEventListener('click', () => {
                        mobileMenu.classList.toggle('hidden');
                    });

                    // Cerrar menú al hacer clic en un enlace
                    const menuLinks = mobileMenu.querySelectorAll('a');
                    menuLinks.forEach(link => {
                        link.addEventListener('click', () => {
                            mobileMenu.classList.add('hidden');
                        });
                    });

                    // Cerrar menú al hacer clic fuera
                    document.addEventListener('click', (event) => {
                        const target = event.target as Node;
                        if (mobileMenu && !mobileMenu.contains(target) && 
                            mobileMenuButton && !mobileMenuButton.contains(target)) {
                            mobileMenu.classList.add('hidden');
                        }
                    });
                }
            });
        </script>
    </body>
</html>

<style is:global>
    body {
        font-family: 'Inter', sans-serif;
    }

	::-webkit-scrollbar {
		width: 10px;
		height: 10px;
	}

	::-webkit-scrollbar-track {
		background: rgba(15, 85, 82, 0.5); /* primary-900 con transparencia */
		border-radius: 8px;
	}

	::-webkit-scrollbar-thumb {
		background: rgba(10, 130, 123, 0.8); /* primary-700 con transparencia */
		border-radius: 8px;
		transition: background 0.3s ease;
	}

	::-webkit-scrollbar-thumb:hover {
		background: rgba(7, 165, 156, 1); /* primary-600 */
	}

	/* Estilos para Firefox */
	* {
		scrollbar-width: thin;
		scrollbar-color: rgba(10, 130, 123, 0.8) rgba(15, 85, 82, 0.5);
	}
</style>
